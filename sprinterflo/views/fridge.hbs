<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Track Your Meals</title>
  <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@700&family=Lora:wght@400;700&display=swap" rel="stylesheet">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      font-family: 'Lora', serif;
      background-color: #f8f9fa;
      color: #333;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
      display: flex;
      gap: 20px;
    }
    /* Header */
    header {
      background: #FF8CD9;
      color: white;
      position: sticky;
      top: 0;
      z-index: 50;
      padding: 15px 0;
    }
    nav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 20px;
    }
    .logo {
      font-family: 'Dancing Script', cursive;
      font-size: 1.8rem;
      font-weight: bold;
    }
    .menu-icon, .profile-icon {
      cursor: pointer;
      font-size: 1.5rem;
    }
    .menu-icon::before {
      content: "‚ò∞";
    }
    .profile-icon::before {
      content: "üë§";
    }
    /* Side Drawer */
    .side-drawer {
      position: fixed;
      top: 0;
      left: -250px;
      width: 250px;
      height: 100%;
      background: #FFDBF5;
      box-shadow: 2px 0 5px rgba(0,0,0,0.1);
      transition: left 0.3s ease;
      z-index: 100;
    }
    .side-drawer.open {
      left: 0;
    }
    .side-drawer .drawer-header {
      padding: 15px;
      border-bottom: 1px solid #F062C0;
      display: flex;
      justify-content: flex-start;
    }
    .side-drawer .back-btn {
      background: none;
      border: none;
      color: #F062C0;
      font-size: 1.5rem;
      cursor: pointer;
    }
    .side-drawer ul {
      list-style: none;
      padding: 20px;
    }
    .side-drawer li {
      margin-bottom: 15px;
    }
    .side-drawer a, .side-drawer button {
      color: #F062C0;
      text-decoration: none;
      font-size: 1rem;
      font-family: 'Lora', serif;
      background: none;
      border: none;
      cursor: pointer;
    }
    .side-drawer a:hover, .side-drawer button:hover {
      color: #FF8CD9;
    }
    /* Profile Dropdown */
    .profile-dropdown {
      position: absolute;
      top: 50px;
      right: 20px;
      background: #FFDBF5;
      border-radius: 5px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      display: none;
      z-index: 100;
    }
    .profile-dropdown.open {
      display: block;
    }
    .profile-photo {
      width: 80px;
      height: 80px;
      border-radius: 50%;
      background: #FEC8EC;
      margin: 10px auto;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
    }
    .profile-dropdown button {
      display: block;
      width: 100%;
      padding: 10px;
      background: none;
      border: none;
      color: #F062C0;
      font-family: 'Lora', serif;
      font-size: 0.9rem;
      cursor: pointer;
    }
    .profile-dropdown button:hover {
      background: #FEC8EC;
    }
    /* Main Content */
    .main-content {
      flex: 1;
      padding: 20px 0;
    }
    .meals-section h2 {
      font-family: 'Dancing Script', cursive;
      font-size: 2rem;
      color: #F062C0;
      text-align: center;
      margin-bottom: 20px;
    }
    .days-of-week {
      display: flex;
      justify-content: center;
      gap: 10px;
      margin-bottom: 20px;
    }
    .day-circle {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background: #FEC8EC;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.9rem;
      color: #333;
      position: relative;
      cursor: pointer;
    }
    .day-circle.current {
      background: #FF8CD9;
      color: white;
    }
    .day-circle:not(:last-child)::after {
      content: '';
      position: absolute;
      right: -25px;
      width: 40px;
      height: 2px;
      background: #FEC8EC;
      z-index: -1;
    }
    /* Grocery List */
    .grocery-list {
      width: 300px;
      padding: 20px;
    }
    .grocery-card {
      background: #FEC8EC;
      padding: 15px;
      border-radius: 10px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      margin-bottom: 15px;
    }
    .grocery-card h3 {
      font-family: 'Dancing Script', cursive;
      font-size: 1.5rem;
      color: #FF8CD9;
      margin-bottom: 10px;
    }
    .grocery-card ul {
      list-style: none;
    }
    .grocery-card li {
      font-size: 1rem;
      color: #333;
      margin-bottom: 8px;
    }
    .add-ingredient {
      background: none;
      border: none;
      color: #F062C0;
      font-family: 'Lora', serif;
      font-size: 1rem;
      cursor: pointer;
      display: flex;
      align-items: center;
      gap: 5px;
    }
    .add-ingredient:hover {
      color: #FF8CD9;
    }
    /* Suggested Meals */
    .suggested-meals {
      flex: 1;
    }
    .suggested-meals h3 {
      font-family: 'Dancing Script', cursive;
      font-size: 1.5rem;
      color: #FF8CD9;
      margin-bottom: 10px;
      text-align: center;
    }
    .meals-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 15px;
    }
    .meal-card {
      background: #FEC8EC;
      padding: 15px;
      border-radius: 10px;
      display: flex;
      flex-direction: column;
      align-items: center;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      position: relative;
    }
    .meal-card h4 {
      font-family: 'Lora', serif;
      font-size: 1rem;
      color: #333;
      margin-bottom: 5px;
    }
    .meal-card p {
      font-size: 0.9rem;
      color: #555;
      text-align: center;
    }
    .add-meal-btn {
      position: absolute;
      top: 10px;
      right: 10px;
      background: none;
      border: none;
      font-size: 1.5rem;
      cursor: pointer;
      color: #FF8CD9;
    }
    .add-meal-btn:hover {
      color: #F062C0;
    }
    /* Popup */
    .popup {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.5);
      display: none;
      align-items: center;
      justify-content: center;
      z-index: 200;
    }
    .popup.open {
      display: flex;
    }
    .popup-content {
      background: #FFDBF5;
      padding: 20px;
      border-radius: 10px;
      width: 300px;
      text-align: center;
    }
    .popup-content h3 {
      font-family: 'Dancing Script', cursive;
      font-size: 1.5rem;
      color: #FF8CD9;
      margin-bottom: 15px;
    }
    .popup-content input {
      width: 100%;
      padding: 8px;
      margin-bottom: 10px;
      border: 1px solid #ddd;
      border-radius: 5px;
    }
    .popup-content button {
      background: #FF8CD9;
      color: white;
      border: none;
      padding: 8px 15px;
      border-radius: 5px;
      cursor: pointer;
      margin: 5px;
    }
    .popup-content button:hover {
      background: #F062C0;
    }
    /* Footer */
    footer {
      background: #F062C0;
      color: white;
      padding: 40px 0;
      margin-top: 40px;
    }
    .footer-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 20px;
      margin-bottom: 30px;
    }
    footer h3 {
      font-family: 'Dancing Script', cursive;
      font-size: 1.3rem;
      margin-bottom: 15px;
    }
    footer p, footer a {
      font-size: 0.9rem;
      color: #FFDBF5;
      font-family: 'Lora', serif;
    }
    footer a {
      text-decoration: none;
      display: block;
      margin-bottom: 8px;
    }
    footer a:hover {
      color: white;
    }
    .footer-bottom {
      text-align: center;
      font-size: 0.9rem;
      color: #FFDBF5;
      font-family: 'Lora', serif;
    }
    /* Responsive */
    @media (max-width: 768px) {
      .container {
        flex-direction: column;
      }
      .grocery-list {
        width: 100%;
      }
      .meals-section h2 {
        font-size: 1.8rem;
      }
      .suggested-meals h3 {
        font-size: 1.3rem;
      }
      .day-circle {
        width: 35px;
        height: 35px;
        font-size: 0.8rem;
      }
      .day-circle:not(:last-child)::after {
        right: -20px;
        width: 30px;
      }
      .popup-content {
        width: 90%;
      }
    }
  </style>
</head>
<body>
  <!-- Header -->
  <header>
    <nav>
      <div class="menu-icon" id="menuIcon"></div>
      <div class="logo">Track your meals</div>
      <div class="profile-icon" id="profileIcon"></div>
    </nav>
  </header>

  <!-- Side Drawer -->
  <div class="side-drawer" id="sideDrawer">
    <div class="drawer-header">
      <button class="back-btn" id="closeDrawerBtn">‚Üê</button>
    </div>
    <ul>
      <li><a href="#">Notifications</a></li>
      <li><a href="#">Settings</a></li>
      <li><a href="#">Help</a></li>
      <li><button id="logoutBtn">Logout</button></li>
    </ul>
  </div>

  <!-- Profile Dropdown -->
  <div class="profile-dropdown" id="profileDropdown">
    <div class="profile-photo">üë§</div>
    <button id="editPhotoBtn">Edit Profile Photo</button>
    <button id="editInfoBtn">Edit Registration Info</button>
  </div>

  <!-- Main Content -->
  <div class="container">
    <!-- Grocery List -->
    <div class="grocery-list">
      <div class="grocery-card">
        <h3>Grocery List</h3>
        <button class="add-ingredient" id="addIngredientBtn">Add ingredient +</button>
        <ul id="groceryList">
          <li>Eggs</li>
          <li>Cheese</li>
          <li>Milk</li>
          <li>Bread</li>
        </ul>
      </div>
    </div>

    <!-- Suggested Meals -->
    <div class="main-content">
      <section class="meals-section">
        <h2>Track your meals</h2>
        <div class="days-of-week" id="daysOfWeek">
          <div class="day-circle" data-day="Su">Su</div>
          <div class="day-circle current" data-day="Mo">Mo</div>
          <div class="day-circle" data-day="Tu">Tu</div>
          <div class="day-circle" data-day="We">We</div>
          <div class="day-circle" data-day="Th">Th</div>
          <div class="day-circle" data-day="Fr">Fr</div>
          <div class="day-circle" data-day="Sa">Sa</div>
        </div>
        <div class="suggested-meals">
          <h3>Suggested meals</h3>
          <div class="meals-grid" id="mealsGrid">
            <!-- Meals will be populated by JavaScript -->
          </div>
        </div>
      </section>
    </div>
  </div>

  <!-- Popup -->
  <div class="popup" id="mealPopup">
    <div class="popup-content">
      <h3>Log Your Meal</h3>
      <input type="text" id="mealInput" placeholder="What did you eat?">
      <button id="saveMealBtn">Save</button>
      <button id="cancelMealBtn">Cancel</button>
    </div>
  </div>

  <!-- Footer -->
  <footer>
    <div class="container">
      <div class="footer-grid">
        <div>
          <h3>Lunara</h3>
          <p>Empowering menstruating individuals with AI-driven wellness tools.</p>
        </div>
        <div>
          <h3>Links</h3>
          <a href="#">Dashboard</a>
          <a href="#">Support</a>
        </div>
        <div>
          <h3>Contact</h3>
          <p>Email: support@lunara.app</p>
          <p>Phone: (123) 456-7890</p>
        </div>
      </div>
      <div class="footer-bottom">
        ¬© 2025 Lunara. All rights reserved.
      </div>
    </div>
  </footer>

  <script>
    // State
    let ingredients = ['Eggs', 'Cheese', 'Milk', 'Bread'];
    let mealLogs = JSON.parse(localStorage.getItem('mealLogs')) || {};
    let currentDay = 'Mo';
    let currentMealType = '';

    const mealSuggestions = {
      Breakfast: [
        { ingredients: ['Eggs', 'Bread'], meal: 'Egg Sandwich' },
        { ingredients: ['Milk', 'Bread'], meal: 'Sandwich and Milk' },
        { ingredients: ['Eggs', 'Cheese'], meal: 'Cheese Omelette' }
      ],
      Lunch: [
        { ingredients: ['Bread', 'Cheese'], meal: 'Grilled Cheese Sandwich' },
        { ingredients: ['Eggs', 'Bread'], meal: 'Egg Salad Sandwich' }
      ],
      'Evening Snacks': [
        { ingredients: ['Cheese'], meal: 'Cheese Crackers' },
        { ingredients: ['Milk'], meal: 'Milk and Cookies' }
      ],
      Dinner: [
        { ingredients: ['Eggs', 'Cheese'], meal: 'Cheese Frittata' },
        { ingredients: ['Bread', 'Cheese'], meal: 'Cheese Toast' }
      ]
    };

    // DOM Elements
    const groceryList = document.getElementById('groceryList');
    const addIngredientBtn = document.getElementById('addIngredientBtn');
    const daysOfWeek = document.getElementById('daysOfWeek');
    const mealsGrid = document.getElementById('mealsGrid');
    const mealPopup = document.getElementById('mealPopup');
    const mealInput = document.getElementById('mealInput');
    const saveMealBtn = document.getElementById('saveMealBtn');
    const cancelMealBtn = document.getElementById('cancelMealBtn');
    const menuIcon = document.getElementById('menuIcon');
    const sideDrawer = document.getElementById('sideDrawer');
    const closeDrawerBtn = document.getElementById('closeDrawerBtn');
    const profileIcon = document.getElementById('profileIcon');
    const profileDropdown = document.getElementById('profileDropdown');
    const editInfoBtn = document.getElementById('editInfoBtn');
    const logoutBtn = document.getElementById('logoutBtn');

    // Render Grocery List
    function renderGroceryList() {
      groceryList.innerHTML = '';
      ingredients.forEach(ingredient => {
        const li = document.createElement('li');
        li.textContent = ingredient;
        groceryList.appendChild(li);
      });
    }

    // Suggest Meals
    function suggestMeals() {
      const mealTypes = ['Breakfast', 'Lunch', 'Evening Snacks', 'Dinner'];
      mealsGrid.innerHTML = '';
      mealTypes.forEach(mealType => {
        const suggestions = mealSuggestions[mealType];
        let suggestedMeal = 'No suggestion';
        for (const suggestion of suggestions) {
          const hasAllIngredients = suggestion.ingredients.every(ing => ingredients.includes(ing));
          if (hasAllIngredients) {
            suggestedMeal = suggestion.meal;
            break;
          }
        }
        const mealCard = document.createElement('div');
        mealCard.className = 'meal-card';
        mealCard.innerHTML = `
          <h4>${mealType}</h4>
          <p>${suggestedMeal}</p>
          <button class="add-meal-btn" data-meal-type="${mealType}">+</button>
        `;
        mealsGrid.appendChild(mealCard);
      });

      // Add event listeners to add meal buttons
      document.querySelectorAll('.add-meal-btn').forEach(btn => {
        btn.addEventListener('click', () => {
          currentMealType = btn.dataset.mealType;
          mealPopup.classList.add('open');
          mealInput.focus();
        });
      });
    }

    // Add Ingredient
    addIngredientBtn.addEventListener('click', () => {
      const newIngredient = prompt('Enter a new ingredient:');
      if (newIngredient && newIngredient.trim() && !ingredients.includes(newIngredient.trim())) {
        ingredients.push(newIngredient.trim());
        renderGroceryList();
        suggestMeals();
      }
    });

    // Days of Week Click Handler
    daysOfWeek.querySelectorAll('.day-circle').forEach(day => {
      day.addEventListener('click', () => {
        daysOfWeek.querySelectorAll('.day-circle').forEach(d => d.classList.remove('current'));
        day.classList.add('current');
        currentDay = day.dataset.day;
        suggestMeals(); // Refresh meals for the selected day
      });
    });

    // Popup Handlers
    saveMealBtn.addEventListener('click', () => {
      const meal = mealInput.value.trim();
      if (meal) {
        const dateStr = new Date('2025-05-18').toISOString().split('T')[0];
        mealLogs[dateStr] = mealLogs[dateStr] || {};
        mealLogs[dateStr][currentDay] = mealLogs[dateStr][currentDay] || {};
        mealLogs[dateStr][currentDay][currentMealType] = meal;
        localStorage.setItem('mealLogs', JSON.stringify(mealLogs));
        mealPopup.classList.remove('open');
        mealInput.value = '';
      }
    });

    cancelMealBtn.addEventListener('click', () => {
      mealPopup.classList.remove('open');
      mealInput.value = '';
    });

    // Side Drawer
    menuIcon.addEventListener('click', () => {
      sideDrawer.classList.add('open');
    });
    closeDrawerBtn.addEventListener('click', () => {
      sideDrawer.classList.remove('open');
    });

    // Profile Dropdown
    profileIcon.addEventListener('click', () => {
      profileDropdown.classList.toggle('open');
    });

    editInfoBtn.addEventListener('click', () => {
      window.location.href = 'register.html';
    });

    // Logout
    logoutBtn.addEventListener('click', () => {
      localStorage.removeItem('userEmail');
      localStorage.removeItem('userPassword');
      localStorage.removeItem('hasRegistered');
      localStorage.removeItem('profileData');
      localStorage.removeItem('dailyLogs');
      localStorage.removeItem('exerciseLogs');
      localStorage.removeItem('mealLogs');
      alert('Logged out successfully!');
      window.location.href = 'index.html';
    });

    // Initial Render
    renderGroceryList();
    suggestMeals();
  </script>
</body>
</html>